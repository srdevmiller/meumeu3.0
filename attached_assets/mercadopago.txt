import { fetch } from 'wix-fetch';
import { getSecret } from 'wix-secrets-backend';

//-----------------------------------------------------------------------------------------------------
// Função para verificar o status de pagamento
export async function verificarStatusPagamento(paymentId) {
    try {
        // Recuperar o AccessToken usando getSecret
        const accessToken = await getSecret('AccessToken');

        // Realizar a chamada à API do Mercado Pago
        const response = await fetch(`https://api.mercadopago.com/v1/payments/${paymentId}`, {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${accessToken}`
            }
        });

        return response.json(); // Retorna a resposta no formato JSON
    } catch (error) {
        console.error("Erro ao verificar o status de pagamento:", error);
        throw new Error("Erro ao verificar o status do pagamento");
    }
}

// Função para gerar o PIX
export async function gerarPix(dadosDoPedido) {
    try {
        // Recuperar o AccessToken usando getSecret
        const accessToken = await getSecret('AccessToken');

        const paymentData = {
            transaction_amount: dadosDoPedido.transaction_amount,
            description: 'Plano selecionado',
            payment_method_id: 'pix',
            payer: {
                email: emaildocliente,
                first_name: nomedocliente.split(" ")[0],
                last_name: nomedocliente.split(" ")[1],
                identification: {
                    type: 'CPF',
                    number: cpfdocliente
                },
                address: {
                    zip_code: '06233200',
                    street_name: 'Av. das Nações Unidas',
                    street_number: '3003',
                    neighborhood: 'Bonfim',
                    city: 'Osasco',
                    federal_unit: 'SP'
                }
            }
        };

        // Gere uma chave de idempotência única para cada solicitação
        const idempotencyKey = generateIdempotencyKey();

        // Realizar a chamada à API do Mercado Pago
        const response = await fetch('https://api.mercadopago.com/v1/payments', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${accessToken}`,
                'X-Idempotency-Key': idempotencyKey
            },
            body: JSON.stringify(paymentData)
        });

        return response.json(); // Retorna a resposta no formato JSON
    } catch (error) {
        console.error("Erro ao gerar PIX:", error);
        throw new Error("Erro ao gerar o PIX");
    }
}

// Função para gerar uma chave de idempotência única
function generateIdempotencyKey() {
    // Gere uma chave de idempotência única, por exemplo, usando Math.random()
    return Math.random().toString(36).substring(2) + Date.now().toString(36);
}
